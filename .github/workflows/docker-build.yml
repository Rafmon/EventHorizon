name: Build and Push Multi-Platform Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build for amd64
        run: |
          dotnet publish ./EventHorizon/EventHorizon.csproj -c Release -r linux-x64 --self-contained false -o ./publish/linux/amd64
          docker buildx build --platform linux/amd64 -f ./EventHorizon/Dockerfile -t ghcr.io/rafmon/eventhorizon:linux-amd64 --push .
          uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # GitHub actor
          password: ${{ secrets.GHCR_PAT }}  # GitHub PAT secret 

  build-armv7:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build for arm/v7
        run: |
          dotnet publish ./EventHorizon/EventHorizon.csproj -c Release -r linux-arm --self-contained false -o ./publish/linux/arm/v7
          docker buildx build --platform linux/arm/v7 -f ./EventHorizon/Dockerfile -t ghcr.io/rafmon/eventhorizon:linux-arm --push .
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # GitHub actor
          password: ${{ secrets.GHCR_PAT }}  # GitHub PAT secret        

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build for arm64
        run: |
          dotnet publish ./EventHorizon/EventHorizon.csproj -c Release -r linux-arm64 --self-contained false -o ./publish/linux/arm64
          docker buildx build --platform linux/arm64 -f ./EventHorizon/Dockerfile -t ghcr.io/rafmon/eventhorizon:linux-arm64 --push .
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # GitHub actor
          password: ${{ secrets.GHCR_PAT }}  # GitHub PAT secret

          
  create-and-push-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-armv7, build-arm64]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
    
      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ghcr.io/rafmon/eventhorizon:latest \
            --amend ghcr.io/rafmon/eventhorizon:linux-amd64 \
            --amend ghcr.io/rafmon/eventhorizon:linux-arm64 \
            --amend ghcr.io/rafmon/eventhorizon:linux-arm
          docker manifest push ghcr.io/rafmon/eventhorizon:latest