name: Build and Package Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: 
          - linux-x64
          - linux-arm64
          - linux-arm

    steps:
      # Code aus dem Repository auschecken
      - name: Checkout code
        uses: actions/checkout@v3

      # .NET SDK einrichten
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Build f√ºr die spezifische Runtime erstellen
      - name: Publish Build
        run: |
          dotnet publish ./EventHorizon/EventHorizon.csproj -c Release -r ${{ matrix.runtime }} --self-contained false -o ./output/${{ matrix.runtime }}
      
      # Erstelle ein ZIP-Archiv
      - name: Create ZIP Archive
        run: |
          zip -r ./output/EventHorizon-${{ matrix.runtime }}.zip ./output/${{ matrix.runtime }}

      # ZIP-Datei als Build-Artefakt hochladen
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: EventHorizon-${{ matrix.runtime }}
          path: ./output/EventHorizon-${{ matrix.runtime }}.zip
